{
  "compilerOptions": {
    /* ------------------------- Strict Type-Checking Options ------------------------- */
    "strict": true, // Enable all strict type-checking options
    "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type
    "noImplicitThis": true, // Raise error on 'this' expressions with an implied 'any' type
    "alwaysStrict": true, // Parse in strict mode and emit "use strict" for each source file
    "strictBuiltinIteratorReturn": true, // Ensure that the return type of iterators is correctly typed
    "noImplicitReturns": true, // Report error when not all code paths in function return a value
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statements
    /* -------------------------- Module Resolution Options -------------------------- */
    "module": "ES2022", // Specify module code generation: 'NodeNext' for Node.js with ESM support
    "moduleResolution": "NodeNext", // Determine how modules are resolved: 'NodeNext' for ESM
    "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export
    "resolveJsonModule": true, // Include modules imported with '.json' extension

    /* ------------------------------ Language Features ------------------------------ */
    "jsx": "react", // Specify JSX code generation: 'react' for React JSX
    "experimentalDecorators": true, // Enable experimental support for decorators
    "useDefineForClassFields": true, // Emit ECMAScript-standard class fields

    /* ------------------------------ Output Options ------------------------------- */
    "target": "ESNext", // Specify ECMAScript target version
    "lib": ["ESNext"], // Specify library files to be included in the compilation
    "newLine": "LF", // Specify the newline character: 'LF' for Line Feed

    /* ------------------------------- Checking Options ------------------------------ */
    "forceConsistentCasingInFileNames": true, // Ensure consistent casing in file names
    "noUnusedLocals": true, // Report errors on unused local variables
    "noUnusedParameters": true, // Report errors on unused parameters
    "noUncheckedIndexedAccess": true, // Include 'undefined' in type when accessing indexes that might not exist
    "noPropertyAccessFromIndexSignature": true, // Disallow property access via string index signatures
    "skipLibCheck": true, // Skip type checking of declaration files

    /* ---------------------------- Code Generation Options -------------------------- */
    "noEmitOnError": true, // Do not emit outputs if any type checking errors were reported
    "noEmit": false, // Do not emit outputs (overridden by 'noEmitOnError')
    "sourceMap": false, // Disable the generation of source maps
    "preserveConstEnums": true, // Do not erase const enum declarations in generated code

    /* ------------------------------- Import Options ------------------------------- */
    "importHelpers": false, // Do not import helper functions like __extends in generated code

    /* ------------------------------ Type Checking ---------------------------------- */
    "exactOptionalPropertyTypes": true, // Ensure that optional properties do not include 'undefined' in their types
    /* ----------------------------- Miscellaneous Options ---------------------------- */
    "pretty": true, // Enable color and formatting in output
    "useUnknownInCatchVariables": true // Use 'unknown' type for catch clause variables
  }
}
